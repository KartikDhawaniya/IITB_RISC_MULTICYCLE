LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
USE ieee.numeric_std.ALL;

ENTITY alu IS
    PORT (
        inp1, inp2 : IN STD_LOGIC_VECTOR(15 DOWNTO 0);
        cin, sel : IN STD_LOGIC;
        output : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
        carry, zero : OUT STD_LOGIC);
END ENTITY;

ARCHITECTURE arc_alu OF alu IS
    SIGNAL output_temp : STD_LOGIC_VECTOR(15 DOWNTO 0);
    SIGNAL output_add : STD_LOGIC_VECTOR(15 DOWNTO 0);
    SIGNAL C : STD_LOGIC_VECTOR(16 DOWNTO 1);
    COMPONENT adder IS
        PORT (
            A, B : IN STD_LOGIC_VECTOR(15 DOWNTO 0);
            cin : IN STD_LOGIC;
            S : OUT STD_LOGIC_VECTOR(15 DOWNTO 0);
            cout : OUT STD_LOGIC_VECTOR(15 DOWNTO 0));
    END COMPONENT;
BEGIN

    adder_element : adder
    PORT MAP(inp1, inp2, cin, output_add, C);

    carry <= C(16);

    PROCESS (inp1, inp2, sel, output_add)
    BEGIN
        IF (sel = '0') THEN
            output_temp <= output_add;
        ELSE
            output_temp <= inp1 NAND inp2;
        END IF;
    END PROCESS;

    zero <= '1' WHEN (to_integer(unsigned(output_temp)) = 0) ELSE
        '0';
    output <= output_temp;
END ARCHITECTURE;